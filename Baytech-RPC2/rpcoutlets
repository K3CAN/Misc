#!/usr/bin/perl

#This requires lm_sensors to monitor temperature. 

use strict;
use Device::SerialPort;

my $limit = 55; #temp limit for "Service mode"
my $delay = 5; #time in minutes between checks.
my $fanport = 5; #where the case fan is plugged in for service mode

my $port = new Device::SerialPort ("/dev/ttyUSB0") || die "can't open device";
$port->baudrate(9600); # 
$port->databits(8);
$port->parity("none");
$port->stopbits(1);
$port->handshake("none");

$port->write_settings;
sleep(2);

#If arguments are provided, just do what is asked and exit.
if ("$ARGV[0] $ARGV[1]" =~ /[on|off] [1-6]/) {
	print "Turning $ARGV[0] outlet number $ARGV[1]\n";
	$port->write("$ARGV[0] $ARGV[1]\r\n");
	sleep(1);				#The RPC-2 really doesn't like to receive commands too quickly... 
	$port->write("y\r\n");
} else {
	my $fan;
#If this is run without arguments, assume that we want to control the case fan (service mode).
	while() {
		`sensors | grep Package` =~ m/\+(\d{1,3}\.\d+)/i;
		warn "cpu temp is $1\n";
		

		if ($1 > $limit and $fan ne "on") {
			warn "turning on fan\n";
			$port->write("on $fanport\r\n");
			sleep(1);
			$port->write("y\r");
			$fan = "on";
			warn "fan is now $fan\n";
			
		} elsif ($1 <= $limit and $fan ne "off") {
			warn "turning off fan\n";
		 	$port->write("off $fanport\r\n");
		 	sleep(1);
			$port->write("y\r");
			$fan = "off";
			warn "fan is now $fan\n";
			
		} else {warn "Temperature is $1 and fan is already $fan\n"} 

		
		sleep(60*$delay);
	}
}

sleep(1);
$port->close;

